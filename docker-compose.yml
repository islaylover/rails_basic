# Step1
# docker-compose up -d
#
# Step2
# docker-compose run web rails db:create
#
# Step3
# docker-compose run web rails db:migrate
#
# Step4
# docker-compose run web rails db:seed
#
# Step5
# access http://localhost:3000 and input these values into text fields (mail:admin@hogehoge.com password:password) and login
#
# If you want to enter into container
# docker exec -it rubby_on_rails_on_docker_for_mac_schedule_db_1 bash
#
# docker-compose.ymlフォーマットのバージョン指定
version: '3'
services:
  # Railsコンテナ定義
  web:
    # Dockerfileを使用してイメージをビルド
    build: .
    # コンテナ起動時のデフォルトコマンド
    # ポート番号：3000
    # バインドするIPアドレス：0.0.0.0
    # ポート3000が来たらrailsサーバーが応答
    command: bundle exec rails s -p 3000 -b '0.0.0.0'
    # ローカルのsrcをコンテナにマウント
    volumes:
      - ./src:/app
    # コンテナの外部に3000番を公開
    # 公開するポート番号：コンテナ内部の転送先ポート番号
    ports:
      - 3000:3000
    # dbコンテナが先に起動するよう設定
    depends_on:
      - db
    # pryを使用してデバッグができるよう設定
    tty: true
    stdin_open: true
  # MySQLコンテナ定義
  db:
    # mysqlを使用してコンテナ作成
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    # localの「 ./data_base」にmysql関連データ保存用にマウント
    volumes:
      - ./data_base:/var/lib/mysql
    # コンテナ内の環境変数を定義
    environment:
      # mysqlのルートユーザーのパスワード設定
      MYSQL_ROOT_PASSWORD: password